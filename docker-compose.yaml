version: '3.8'

services:
  api:
    build: .
    container_name: mining-wave-api
    ports:
      - "${API_PORT:-443}:8000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - REDIS_URL=redis://redis:6380
      - POOL_MIN_SIZE=2
      - POOL_MAX_SIZE=8
      - MAX_CONNECTIONS=50
      - CONNECTION_TIMEOUT=10
      - COMMAND_TIMEOUT=30
      - STATEMENT_TIMEOUT=20000
      - EXPLORER_API_RETRY_COUNT=3
      - EXPLORER_API_RETRY_DELAY=3
      - EXPLORER_API_TIMEOUT=10
      - PYTHONUNBUFFERED=1
      - NOTIFICATION_WINDOW=300
      - MAX_SIMILAR_NOTIFICATIONS=3
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./:/app
      - ./certs:/app/certs:ro
    command: >
      uvicorn api:app 
      --host 0.0.0.0 
      --port 8000
      --ssl-keyfile /app/certs/key.pem
      --ssl-certfile /app/certs/cert.pem
      --workers 2
      --loop uvloop 
      --http httptools
      --log-level debug
      --timeout-keep-alive 75
      --limit-concurrency 500
      --backlog 1024
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  redis:
    image: redis:7-alpine
    container_name: mining-wave-redis
    command: redis-server --port 6380 --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6380"
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  redis_data:
